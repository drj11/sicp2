;;; Exercise 1.12

; Redrawing pascal's triangle so that
; the first `1` in each row is in column 0:
; Row 0: 1
; Row 1: 1 1
; Row 2: 1 2 1
; Row 3: 1 3 3 1
; Row 4: 1 4 6 4 1
;           ...

; Computing Row 0 is easy:
; if column is 0 then 1 else 0
; For any other row;
; it's sum of two elements from the previous row:
; the one directly above (same column) and
; the one to the left (previous column)

(define (pascal row col)
  (cond ((= row 0) (if (= col 0) 1 0))
        (else (+ (pascal (- row 1) (- col 1))
                 (pascal (- row 1) col)))))

; Optimisation: This computes lots of zeroes.
; Observe that for any row if we're "outside the triangle",
; the result is 0.
; In other words:
; if (not (<= 0 col row)) then the result is 0.
